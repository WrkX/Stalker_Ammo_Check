local no_ammo_wpns = {
	wpn_binoc = true,
	wpn_binoc_inv = true,
	wpn_knife = true,
	wpn_knife2 = true,
	wpn_knife3 = true,
	wpn_knife4 = true,
	wpn_knife5 = true,
	wpn_axe = true,
	wpn_axe2 = true,
	wpn_axe3 = true,
	device_pda_1 = true,
	grenade_f1 = true,
	grenade_rgd5 = true,
	grenade_smoke = true,
}
local jammed_weapon = false

function on_game_start()
	RegisterScriptCallback("on_key_press",on_key_press)
	RegisterScriptCallback("actor_on_weapon_jammed", weapon_jammed)
	RegisterScriptCallback("actor_on_weapon_reload", on_reload)
end

function on_key_press(key)
	local bind = dik_to_bind(key)
    if (bind == key_bindings.kCUSTOM25) then
		checkAmmo()
	end
end

function weapon_jammed()
	jammed_weapon = true
end

function on_reload()
	jammed_weapon = false
end

function checkAmmo()
	local weapon = db.actor:item_in_slot(db.actor:active_slot())

	if(weapon == nil or db.actor == nil or no_ammo_wpns[weapon:section()]) then return -1 end -- ends if no weapon is in hand etc.
	
	local weaponType = system_ini():r_u32(weapon:section(), "ef_weapon_type") -- Checks if the weapon is a grenade (type 4) or bolt/bullet case (type 1)
	if (weaponType == 4 or weaponType == 1 or weaponType == nil) then return -1 end
	
	local currentState = weapon:get_state()
	
	if(currentState == 0) then

		local currentAmmo = weapon:get_ammo_in_magazine()

		if (currentAmmo == nil) then return -1 end

		local maxAmmo = system_ini():r_u32(weapon:section(), "ammo_mag_size")
		local curAmmoPerc = currentAmmo/maxAmmo
		
		if (curAmmoPerc == 1) then 
			message = game.translate_string("st_ac_full")

		elseif (curAmmoPerc < 1 and curAmmoPerc >= 0.8) then 
			message = game.translate_string("st_ac_nearly_full")

		elseif (curAmmoPerc < 0.8 and curAmmoPerc >= 0.6) then 
			message = game.translate_string("st_ac_more_half")

		elseif (curAmmoPerc < 0.6 and curAmmoPerc >= 0.45) then 
			message = game.translate_string("st_ac_about_half")

		elseif (curAmmoPerc < 0.45 and curAmmoPerc >= 0.25) then 
			message = game.translate_string("st_ac_less_half")

		elseif (curAmmoPerc < 0.25 and curAmmoPerc >= 0.001) then 
			message = game.translate_string("st_ac_near_empty")
		else
			message = game.translate_string("st_ac_empty")
		end
		
		if (jammed_weapon) then 
			message = game.translate_string("st_ac_jammed")
		end
		
		db.actor:hide_weapon()
		CreateTimeEvent(0,"showMessage",0.7,function() 
            actor_menu.set_msg(1, message, 1)
            return true
        end)
		
		CreateTimeEvent(0,"restore Weapon",1.5,function() 
            db.actor:restore_weapon()
            return true
        end)
		
	end
end